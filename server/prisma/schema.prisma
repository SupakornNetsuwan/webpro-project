// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model User {
  email         String       @id
  created_date  DateTime     @default(now())
  firstname     String
  lastname      String
  name          String
  picture       String
  role          Role         @default(USER)
  posts         Post[]
  follow_post   FollowPost[]
}

model Subject {
  subject_name    String @id
  description     String @db.MediumText
  instructor_name String
  posts           Post[]
}

model Post {
  post_id      String       @id @default(cuid())
  post_title   String
  intro        String       @db.MediumText
  post_img     String?
  subject_name String
  subject      Subject      @relation(fields: [subject_name], references: [subject_name], onDelete: Cascade)
  author_email String
  author       User         @relation(fields: [author_email], references: [email], onDelete: Cascade)
  lessons      Lesson[]
  follow_post  FollowPost[]
  create_date  DateTime     @default(now())
  updated_date DateTime     @updatedAt
}

model Lesson {
  lesson_id      String   @id @default(cuid())
  lesson_title   String
  lesson_content String   @db.LongText
  lesson_intro   String   @db.MediumText
  file_location  String?
  post_id        String
  post           Post     @relation(fields: [post_id], references: [post_id], onDelete: Cascade)
  created_date   DateTime @default(now())
  updated_date   DateTime @updatedAt
}

model FollowPost {
  email       String
  follower    User     @relation(fields: [email], references: [email], onDelete: Cascade)
  post_id     String
  post        Post     @relation(fields: [post_id], references: [post_id], onDelete: Cascade)
  follow_date DateTime @default(now())

  @@id([email, post_id])
}

enum Role {
  USER
  ADMIN
}
